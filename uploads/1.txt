1. 전자계산기 일반
- 컴퓨터의 특징 : 대용량성, 범용성(여러가지 용도로 활용), 호환성(다른 컴터에서도 사용), 정확성, 신뢰성(주어진 환경에서 기능 활용)

 
중앙처리장치(CPU)의 구성 (제어장치, 연산장치, 레지스터)
- 제어장치: 컴퓨터 동작을 제어하는 장치
 (프로그램 카운터(PC), 명령어 레지스터(IR), 부호기, ~해독기 등)
- 연산장치: 제어장치의 명령에 따라 실제로 연산을 수행하는 장치
 (가산기, 감산기, 누산기(AC), 보수기, 데이터레지스터, 오버플로우 검출기, 시프트레지스터 등)

 
*마이크로프로세서 = 컴퓨터 = 칩에 내장
-> RISC : 명령어 적고, 명령어 길이 고정, 빠르고, 복잡함 (서버, 워크스테이션 등)
-> CISC : 명령어 많고, 명령어 길이 가변, 느리고, 간단함 (개인용 컴터 PC)


- 레지스터: CPU 내부에서 처리할 명령어나 연산의 중간 결과값 등을 일시적으로 기억하는 임시 저장 장소, 연산 속도 향상을 위해 사용
 -> 프로그램 카운터(PC) : 다음번에 실행할 명령어의 번지를 기억하는 레지스터
 -> 명령 레지스터(IR) : 실행중인 명령의 내용을 기억하는 레지스터
 -> 누산기(AC) : 연산된 결과를 일시적으로 저장하는 레지스터로 연산의 중심
 -> 상태 레지스터, PSW : CPU에서 명령이 실행되는 순서를 제어
 -> 버퍼 레지스터 : 입,출력장치의 동작 속도와 전자계산기 내부의 동작 속도를 맞추는데 사용되는 레지스터
 -> 시프트 레지스터 : 클럭펄스에 의해 기억되는 내용을 왼쪽 또는 오른쪽으로 1bit씩 자리를 이동시키는 레지스터

 
드모르강의 법칙 : A’+B’ = A’*B’  A’B’ = A’+B’
AND : Y=A*B
OR : Y=A+B

반가산기 : 1Bit짜리 2진수 2개를 덧셈한 합(S)과 자리올림수(C)를 구하는 회로
C(자리올림수) = A*B // or 계산
S(합) = A’B+AB’ = A(+)B  // xor 계산
전가산기 : 2개의 반가산기와 1개의 OR 게이트 (3개의 입력선과 2개의 출력선)

 
기타 조합논리회로
디코더: 2진 코드를 다른 코드로 바꿀 때 사용
인코더: 디코더의 반대, 특정 값을 여러 자리인 2진수로 변환
멀티플렉서: 여러 개의 입력선중 1개를 선택하여 1개의 출력선으로 출력
디멀티플렉서: 1개의 입력선으로 들어오는 정보를 여러 개의 출력선 중 1개를 선택하여 출력

 
플립플롭: 전원이 공급되고 있는 한, 상태의 변화를 위한 신호가 발생할 때까지 현재의 상태를 그대로 유지
RS 플립플롭: S = 1 , R = 1 -> Q = 동작 안 됨
JK 플립플롭: J = 1, K = 1 -> Q’ =  반전, 보수

 
자료 구성의 단위
비트: 자료 표현의 최소 단위 ( 2진수 , 0 과 1 )
바이트: 8개의 비트가 모여 1byte, 1byte는 256가지의 정보 표현, 주소 지정의 단위

워드: CPU가 한 번에 처리할 수 있는 명령 단위
 - 반 워드(half word): 2byte
 - 풀 워드(full word): 4byte
 - 더블 워드(double word): 8byte

필드: 파일 구성의 최소 단위
레코드: 하나 이상의 관련된 필드가 모여서 구성
블록: 1개 이상의 논리 레코드가 모여 구성
파일: 프로그램 구성의 기본 단위
데이터베이스: 여러 개의 관련된 파일의 집합
보수: 뺄셈을 수행하기 위해 사용 (1의 보수 = 0 -> 1로 1 -> 0 으로 바꾸면 됨), 2의 보수(1의 보수 구한 뒤 1을 더하면 됨)

자료의 외부적 표현
BCD(2진화 10진코드): 6bit 코드로 1개의 문자를 2개의 zone 비트와 4개의 Digit 비트로 표현 (64가지 문자)
ASCII 코드: 7bit 코드로 1개의 문자를 3개의 zone 비트와 4개의 Digit 비트로 표현, 통신제어용으로 사용(128가지 문자)
EBCDIC(확장 2진화 10진코드): 8bit 코드로 1개의 문자를 4개의 zone 비트와 4개의 Digit 비트로 표현, 대형기종 컴터 (256 문자)

그레이코드: 연속되는 2개의 숫자를 표현한 코드에서~, 아날로그-디지털 변환, 데이터 전송에 활용
- 2진수를 그레이코드로 변환하면 ‘그’

명령어의 구성
연산자(Operation Code)부 / 자료(Operand)부
연산자(Operation Code)부 : OP-Code, 크기 = 명령의 종류 2n개로 가능 (ex 5bit = 2의 5승 32개 사용 가능)
자료(Operand)부 : 주소(Address)부 라고 함
연산자의 기능: 제어 기능, 함수 연산 기능, 입-출력 기능, 전달 기능

 
명령어 형식
3주소 명령어: Operand부 3개
2주소 명령어: Operand부 2개, 가장 일반적으로 사용
1주소 명령어 : Operand부 1개, AC(누산기)를 이용하여 명령어 처리
-> 누산기(AC) : 연산된 결과를 일시적으로 저장하는 레지스터로 연산의 중심
0주소 명령어 : Operand부 없이 연산자(OP-Code)부 만으로 구성, 주소의 사용 없이 ‘스택’에 연산자와 피연산자 넣고 빼고 함
 

주소 지정 방식(절대주소, 상대주소)
접근 방식에 따른 분류(즉 직 간)
즉시 주소지정방식: 명령어 자체에 오퍼랜드를 가지고 있음, 별도의 기억 장소 엑세스 X, 속도 빠름
직접 주소지정방식: 명령의 주소부(Operand)에 있는 값이 실제 데이터가 기억된 번지(Address)를 지정
간접 주소지정방식: 2회 이상 타고 감

 
계산에 의한 주소 지정 방식
인덱스 레지스터: 주소지정에 2개의 레지스터를 사용(색인)

 
실제 기억공간 주소에 따른 구분
절대주소: 임의의 기억장소에 대한 실제 주소(유효주소) 16진수
상대주소: 절대주소로 변환해야만 실제 데이터에 접근 가능

 
채널
- 주변 장치에 대한 제어 권한을 CPU로부터 넘겨받아 CPU대신 입출력 관리
 - 주기억장치와 입출력장치 중간에 위치
 - 입출력장치와 CPU의 속도차로 인한 단점 해결

DMA/스풀링/버퍼링
DMA(Direct Memory Access, 직접 메모리 접근): CPU의 참여 없이 입출력장치와 메모리가 직접 데이터를 주고 받음
스풀링: 프린터와 같은 저속의 입출력장치와 고속의 CPU간의 속도 차이 해소 (보조기억장치, 다중 작업, 소프트웨어)
버퍼링: 스풀링과 목적은 같음 (주기억장치, 단일 작업, 하드웨어)
인터럽트(Interrupt): 예기치 않은 상황이 발생할 경우 현재 실행중인 작업을 즉시 중단하고 발생된 상황을 우선 처리 함 ‘끼어들기’

 32 16 8 4 2 0 0 0 0 1 = 10000
ROM
- 읽을수만 있음, 쓰기 불가
- 전원 꺼져도 데이터 안날아감 비휘발성
- PROM(수정 불가), EPROM(자외선 이용 여러 번 수정), EEPROM(전기 이용 여러 번 수정)

 
기타 메모리
캐시 메모리: CPU와 주기억장치 사이에 위치하여 컴퓨터의 처리 속도를 향상, SRAM 사용
가상 메모리: 보조기억장치(하드디스크)의 일부를 주기억장치처럼 사용하는 메모리 기법, 주 기억장치보다 큰 프로그램 불러와 실행 시
플래시 메모리: 비휘발성, 충격 강함, MP3, 휴대폰 등

 
보조기억장치 – 자기테이프
자기테이프 : 주소의 개념 없음, 처음부터 차례대로 순차처리(SASD)만 할 수 있는 대용량 저장 매체
IRG(Inter Record Gap) : 레코드와 레코드 사이의 갭 + 비블로킹
IBG(Inter Block Gap) : 블록과 블록 사이의 갭 + 블로킹, 블록화 인수(묶어놓은 블록 수)
*레코드: 하나 이상의 관련된 필드가 모여서 구성
*블록: 1개 이상의 논리 레코드가 모여 구성

 
보조기억장치 – 자기디스크
자기디스크 :순차, 비순차 처리가 모두 가능(DASD)방식
트랙(Track) : 회전축을 중심으로 데이터가 기록되는 동심원
섹터 : 트랙을 일정하게 나눈 구간으로 정보 저장 단위의 기본 단위
실린더 : 여러장의 디스크 판에서 같은 위치에 있는 트랙의 모임
클러스터 : 섹터를 모은 것, 운영체제가 관리하는 파일 저장의 기본 단위


2. 패키지 활용

데이터베이스
장점: 데이터 중복 최소화, 데이터 공유, 데이터 일관성 유지, 데이터 무결성 유지 등
단점: 전산화 비용 증가

설계 순서: 요구 조건 분석 -> 개념적 설계 -> 논리적 설계 -> 물리적 설계

 
DBMS(데이터베이스 관리 시스템)
- 사용자와 데이터베이스 사이에 위치하여 데이터베이스를 관리하고 요구정보 생성해주는 소프트웨어

 
DBMS의 필수 기능(정,조,제)
 - 정의 기능(=속성 변경): 데이터의 타입과 구조에 대한 정의와 데이터를 이용하는 방식 정의
 - 조작 기능(=튜플 변경): 데이터의 검색, 갱신, 삽입, 삭제 등을 처리하기 위해 데이터 접근 수단을 정의
 - 제어 기능: 데이터의 정확성, 보안성 유지를 위한 무결성, 보안 및 권한 검사, 병행 제어 등

 
스키마(외부, 개념, 내부)
 - 스키마는 데이터베이스를 구성하는 개체, 속성, 관계 등 구조에 대한 정의와 이에 대한 제약 조건 등을 기술 하는 것
 - 외부 스키마: 일반 사용자나 응용 프로그래머의 관점에서 본 스키마
 - 개념 스키마: 기관이나 조직체의 관점에서 본 스키마, 데이터베이스의 접근 권한, 보안 정책, 무결성 규칙에 대한 정의를 포함
 - 내부 스키마: 시스템 프로그래머나 시스템 설계자의 관점에서 본 스키마

 
데이터베이스 사용자
 - 데이터베이스 관리자(DBA): 시스템을 관리하고 운영에 관한 모든 것을 책임지는 사람이나 그룹
 - 응용 프로그래머: 응용 프로그램을 통해 데이터베이스에 접근하는 사람
 - 일반 사용자: 질의어를 사용하여 데이터베이스에 접근하는 사용자들

 
관계형 데이터베이스의 구성 요소
 - 테이블(=표, 릴레이션): 데이터들을 행과 열로 표현한 것, 튜플(레코드)의 집합
 - 튜플(Tuple): 행, 개체(레코드)
 - 속성(Attribute): 열, 필드, 데이터베이스를 구성하는 가장 작은 단위
 - 도메인(Domain): 하나의 속성에서 취할 수 있는 값의 범위 (ex 성별의 도메인 ‘남’ or ‘여’)
 - 차수(Degree): 속성의 개수 = 필드의 개수
 - 기수(Cardinality) 튜플의 개수

SQL의 분류(정,조,제 / 단무씨)

- DDL(데이터 정의어): 정의하거나 변경 또는 삭제할 때 사용하는 언어
  => CREATE : 테이블 생성
  => ALTER : 테이블 수정 ( 속성 변경 )
  => DROP : 테이블 삭제

CASCADE(삭제할 요소를 참조하는 다른 모든 개체를 함께 삭제)

RESTRICT(삭제할 요소를 다른 개체가 참조중일때는 삭제를 취소)

- DML(데이터 조작어): 질의어를 통해 실질적으로 처리하는데 사용하는 언어
  => SELECT: 조건에 맞는 튜플을 검색
          SELECT ~ FROM ~ WHERE
          DISTINCT: 중복되는 레코드는 한 번만 표시
          * : 모든 필드 검색
          ORDER BY: 정렬 할 때 사용 (ASC=오름차순, DESC=내림차순)
  => INSERT: 새로운 튜플을 삽입
          INSERT INTO ~ VALUE
  => DELETE: 조건에 맞는 튜플을 삭제
          DELETE ~FROM ~WHERE
  => UPDATE: 조건에 맞는 튜플의 내용을 변경
          UPDATE ~ SET ~ WHERE

  
- DCL(데이터 제어어): 데이터의 보안, 무결성, 회복, 병행 수행 제어 등을 정의하는데 사용하는 언어, 데이터 관리를 목적으로 사용
  => COMMIT: 정상적으로 완료되었음을 관리자에게 알림
  => ROLLBACK: 원래의 상태로 복구
  => GRANT: 사용자에게 사용 권한 부여
  => REVOKE: 사용자에게 사용 권한 취소

*VIEW: 하나 이상의 기본 테이블로부터 유도되어 만들어진 가상 테이블

 
3. PC 운영체제

운영체제(OS)의 정의: 사용자들이 보다 쉽고 간편하게 컴퓨터 시스템을 이용할 수 있도록 해주는 소프트웨어
  => 신뢰성, 편리성, 효율성, 용이성 등이 있다.

운영체제의 종류: 단일 작업 처리(DOS), 다중 작업 처리(Windows, UNIX, LINUX 등)
운영체제의 구성: 제어 프로그램, 처리 프로그램
제어 프로그램(감 작 데): 감시, 작업 제어, 자료 관리
처리 프로그램(서 문 언): 언어 번역, 서비스, 문제

 
언어 번역 프로그램
- 어셈블러: 어셈블리어로 작성된 원시 프로그램을 번역
- 컴파일러: 고급 언어로 작성된~ 프로그램을 생성함
- 인터프리터: 고급 언어나 코드화 된 중간 언어를 입력 받아 프로그램 생성 없이 직접 기계어 생성 실행

서비스 프로그램
- 링커(Linker): 언어 번역 프로그램이 생성한 목적 프로그램들과 로드 모듈을 연결 시켜 줌
- 로더(Loader): 컴퓨터 내부로 정보를 들여오거나 보조기억장치로부터 주기억장치로 적재하는 프로그램 할당, 연결, 재배치, 적재

*언어 번역 과정
원시 프로그램 -> (컴파일러) -> 목적 프로그램 -> (링킹) -> 로드 모듈 -> (로더) -> 실행
 

운영체제의 운용 방식

- 일괄 처리 시스템(Batch Processing System)
  => 데이터를 모아서 한꺼번에 처리 (Batch)방식

- 실시간 처리 시스템(Real Time Processing System)
  => 데이터 발생 즉시 처리하여 결과 산출 (우주선, 은행, 전화, 레이더 등 실시간 해야하는)

- 시분할 시스템(Time Sharing System)
  => 하나의 프로세서가 CPU를 독점하는 것을 방지하기 위해 각각 하나의 시간 슬롯을 할당하여 동작 (Round Robin)방식
  => 한 시스템을 여러 명의 사용자가 공유하여 동시에 작업을 수행

- 다중 프로그래밍 시스템(Multi-Progamming System)
  => 하나의 CPU와 주기억장치를 이용해 여러 개의 프로그램을 동시에 처리하는 방식

- 다중 처리 시스템(Multi-Processing System)
  => 두 개 이상의 CPU를 설치하여 병렬 처리, 여러 개의 프로그램을 동시에 처리

 *운영체제 운용 기법의 발달 과정

일괄 처리 시스템 -> 실시간 처리 시스템 -> 다중 프로그래밍 -> 다중 처리 시스템 -> 시분할 시스템 -> 분산 운영 체제

프로세스의 정의
 - 실행중인 프로그램
 - Dispatch: 준비 상태에서 대기하고 있는 프로세스 중 우선순위가 가장 높은 프로세스가 CPU를 할당 받아 실행 상태로 전이
 - Wake Up: 입출력 작업이 완료되어 프로세스가 대기 상태에서 준비 상태로 전이되는 과정

 
프로세스 스케줄링
 - 스케줄링은 프로세스가 생성되어 실행될 때 필요한 시스템의 여러 자원을 해당 프로세스에게 할당하는 작업

 - 비선점(Non-preemptive) 스케쥴링 : 이미 할당된 CPU를 다른 프로세스가 강제로 빼앗아 사용할 수 없는 스케줄링 기법
  => FCFS=FIFO: 준비상태 큐에 도착한 순서에 따라 차례로 CPU를 할당하는 기법 // first in first out
  => SJF: 준비 상태 큐에서 실행 시간이 가장 짧은 프로세스에게 먼저 CPU를 할당
  => HRN: SJF 기법을 보완 대기 시간과 서비스 시간을 이용

 
 - 선점(Preemptive) 스케쥴링 : 우선순위가 높은 다른 프로세스가 CPU를 강제로 빼앗아 사용할 수 있음
  => SRT: 실행 시간을 비교하여 가장 짧은 실행 시간을 요구하는 프로세스에게 CPU 할당
  => 라운드로빈(Round Robin): 시분할 시스템

 
교착상태(DeadLock)
 - 두 프로세스 모두 실행을 할 수 없게 되는 현상

 
DOS

 
DOS의 부팅과정
 - 부팅에 반드시 필요한 시스템 파일 (MS-DOS,  SYS,  IO.SYS,  COMMAND.COM)
 - 웜부팅: 컨트롤 알트 딜리트
 - 콜드부팅: 본체 전원 끄기

 * MS-DOS 부팅 시 필요한 파일 읽는 순서
  IO.SYS -> MSDOS.SYS -> CONFIG.SYS –> COMMAND.COM -> AUTOEXET.BAT

 
DOS의 환경 설정 파일
 - 환경 설정 파일 CONFIG.SYS
 - CONFIG.SYS 파일은 반드시 루트 디렉토리에 존재해야 실행된다.
 - LASTDRIVE(드라이브의 최대 개수 지정), BUFFERS(시스템이 사용 가능한 버퍼 수 지정)

DOS – 내부, 외부, 기본, 필터 명령어
 - 내부 명령어 (도스가 부팅될 때 COMMAND.COM이 실행됨과 동시에 주기억장치에 상주하는 명령어
  => CLS, DIR, VER, COPY, DATE, TIME, MD, CD, RD, PROMPT, VOL, TYPE 등
 - 외부 명령어 (독립된 파일의 형태, DIR 명령으로 확인이 가능)
  => ATTRIB, FORMAT, CHKDSK, FDISK, LABEL, SCANDISK, DISKCOPY, XCOPY, DELTREE, SORT, SYS 등

 
 - 기본 명령어
  => CLS: 현재 화면에 표시된 내용을 지움
  => DATE: 현재 시스템 날짜 확인, 변경
  => TIME: 시간 확인, 변경
  => VER: DOS버젼 표시

 - 필터 명령어
  => MORE: 내용을 한 화면씩 출력
  => FIND: 하나 또는 여러 개의 파일에서 특정한 문자열을 검색
  => SORT: 내용을 정렬하여 화면이나 파일로 출력


DOS – 디스크 관련 명령어
  => FORMAT: 트랙과 섹터를 만드는 초기화 작업 수행
  => DISKCOPY: 내용을 모두 다른 디스크로 복사
  => CHKDSK: 디스크의 상태를 점검
  => SCANDISK: 하드디스크 상태 검사
  => FDISK: 여러 개의 디스크로 나누어(파티션 설정)
  => DEFRAG: 디스크 조각 모음

 
DOS – 디렉토리 관련 명령어
  => MD: 새로운 디렉토리 생성, 같은 디렉토리에 동일한 이름의 디렉토리 생성 불가
  => RD: 디렉토리 삭제
  => CD: 디렉토리 이동
  => DELTREE: 삭제
  => XCOPY: 모든 파일 및 하위 디렉토리까지 복사 (숨김 파일은 복사 안됨)

 
DOS – 파일 관련 명령어
  => /P: 목록을 한 화면 단위로 표시
  => /W: 한 줄에 5개씩 출력, 가장 많이 보여줌
  => /O: 지정한 정렬 방식으로 파일 목록 표시
  => /S: 하위 디렉토리의 정보까지 표시
  => /A: 기록 속성이 설정된 목록을 표시
  => /H: 숨겨진 파일 목록을 표시

 
UNIX/LINUX 특징
- 서버용 컴퓨터에서 사용되는 운영체제
- C언어 구성
- 시분할 시스템을 위해 설계된 대화식 운영체제
- 이식성과 확장성이 뛰어난 개방형 시스템
- 크기가 작고 이해하기 쉬움
- 다중사용자, 다중작업 지원
- 통신망 관리용 운영체제 적합
- 계층적 트리 구조

 
UNIX/LINUX 구성
- 커널: 가장 핵심적인 부분, 하드웨어 보호, 인터페이스 역할
- 쉘: 명령을 해석하여 커널로 처리할 수 있도록 전달하는 명령 인터프리터
- 유틸리티: 일반 사용자가 작성한 응용 프로그램을 처리하는데 사용

 
UNIX/LINUX 시스템 및 프로세스 관련 명령어
  => kill: 현재 실행중인 프로세스를 종료(삭제)함
  => fork: 새로운 프로세스를 생성(프로세스 복제)함
  => finger: 사용자 정보 조회
  => ps: 현재 작업중인 프로세스의 상태 정보 표시
  => ping: 네트워크 상의 문제 진단

 
UNIX/LINUX 디렉터리 관련 명령어
  => pwd: 현재 작업중인 디렉터리 경로를 화면에 출력
  => ls: 현재 작업중인 디렉터리의 모든 파일을 표시 (dos = dir)
  => mkdir: 디렉터리를 생성 (dos = md)
  => rmdir: 디렉터리를 삭제 (dos = rd)
  => cd: 현재 작업중인 디렉터리에서 다른 디렉터리로 이동 (dos = cd)

 
UNIX/LINUX 파일 관련 명령어
  => cp: 파일 복사 (dos = copy, xcopy)
  => rm: 파일 삭제 (dos = del)
  => cat: 파일의 내용을 화면에 표시 (dos = type)
  => chmod: 파일의 보호모드를 설정하여 파일의 사용 허가를 지정 (dos = attrib)

 
4. 정보 통신 일반

 
정보 통신의 정의
 - 정보 통신 = 전기 통신(정보 전송) + 컴퓨터(정보 처리)

 
*온라인 시스템의 3대 구성 요소
 - 단말장치(단말기), 통신 회선(전송 매체), 전송 제어 장치

 
*전처리기(FEP, Front End Processor)
 - 통신 제어장치의 일종으로 여러 단말장치들의 전송 신호를 하나의 고속 통신 회선으로 컴퓨터에 연결
 - 통신 회선 및 단말장치 제어, 메시지의 조립과 분해, 전송 메시지 검사, 오류 검출 수행

 
정보 통신 시스템의 처리 형태
 - 오프라인 시스템: 단말장치와 컴퓨터 사이에 데이터를 임시로 보관할 기록매체가 필요
 - 온라인 시스템: 컴퓨터를 통해 단말장치와 데이터 처리
 - 일괄 처리 시스템(Batch Processing System): 축적
 - 실시간 처리 시스템(Real Time Processing System): 즉시
 - 시분할 처리 시스템(Time Sharing System): 빠름, 대화형 처리 방식

 
통신 속도/통신 음량
 - 변조속도: Baud, 1초 동안 몇 개의 신호 변화가 있었는가 나타냄
 - 신호속도: 1초 동안 전송 가능한 비트의 수 (Bps)
  => 모노비트 = 1비트, 디비트 = 2비트, 트리비트 = 3비트, 쿼드비트 = 4비트


통신 방식
  - 단방향(Simplex) 통신: 한쪽 방향으로만 전송
  => 라디오, TV
  - 반이중(Half-Duplex) 통신: 양방향 가능 하지만 동시에 양쪽에서 전송은 불가
  => 무전기, 모뎀
  - 전이중(Full-Duplex) 통신: 동시에 양방향 전송이 가능한 방식
  => 전화

 
신호 변환 방식 – 디지털 변조
 - 디지털변조: 디지털 데이터를 아날로그 신호로 변환하는 것, 모뎀을 이용한다.
 - 진폭 편이 변조(ASK): 0, 1을 서로 다른 진폭의 신호로 변조 하는 방식, 신호 변동과 잡음에 약함, 데이터 전송용 사용 X
 - 주파수 편이 변조(FSK): 0, 1을 주파수로 변조 하는 방식, 신호 변동과 잡음에 강함
 - 위상 편이변조(PSK): 0, 1을 서로 다른 위상을 갖는 신호로 변조 하는 방식

 
신호 변환 방식 – 펄스 코드 변조
 - 펄스 코드 변조(PCM): 아날로그 데이터(화상, 음성, 동영상 비디오 등)를 디지털 신호로 변환, 코덱(CODEC)을 이용한다.

 
*펄스 코드 변조(PCM) 순서
표본화 -> 양자화 -> 부호화 -> 복호화 -> 여과화

 
전송 제어 절차
 - 전송 제어(Transmission Control): 송수신 측 간의 상호 확인 및 사전처리를 수행하는 것

 
*전송 제어 절차
회선 연결 -> 링크 확립 -> 메시지 -> 링크 종결 -> 회선 절단

 
전송 제어 문자
 - SYN: 문자 동기
 - SOH: 헤딩 시작
 - STX: 본문 시작 헤딩 종료
 - ETX: 본문 종료
 - ETB: 블록 종료
 - ACK: 긍정 응답
 - NAK: 부정 응답

 
자동 반복 요청(ARQ)
 - 정지-대기 ARQ
 - 연속 ARQ: Go-Back-N ARQ(오류 발생 블록 이후 모든 블록 재전송) // Selective Repeat(오류 발생 블록만 재전송)
 - 적응적 ARQ

 
오류 검출 방식
 - 패리티 검사: 2개의 비트에 오류가 동시 발생하면 검출 불가, 오류 검출만 가능 수정 불가
 - 해밍코드 검사: 수신 측에서 오류가 발생한 비트를 검출한 후 직접 수정하는 방식, ‘자기 정정 부호’라고 함

 
DTE / DCE 접속 규격
 - 단말장치(DTE: Date Terminal Equiqment): 통신 시스템과 사용자의 접점에 위치, 결과 출력하는 입출력 장치
 - 회선종단장치(DCE)

 
RS-232C(DTE / DCE 접속 규격)
 - 25핀으로 구성된 커넥터
 - 2(송신), 3(수신), 4(송신 요청), 5(송신 준비 완료)

 
신호 변환 장치 – 모뎀(MODEM) = 변복조기
  - 모뎀: 디지털 데이터를 아날로그 회선에 적합한 아날로그 신호로 변환하는 변조, 그 반대인 복조 실행

 
DSU(Digital Service Unit): 데이터 단말장치와 디지털 통신 회선 사이에 있는 DCE

 
OSI 7계층
  - ISO(국제표준화기구)에서 제안한 통신 규약
  - OSI 7계층
  => 하위계층: 물리 계층, 데이터 링크 계층, 네트워크 계층
  => 상위 계층: 전송 계층, 세션 계층, 표현 계층(암호화, 압축), 응용 계층

 
망의 구성 형태
  - 성형(Star, 중앙 집중형): 중앙 컴퓨터가 있고 이를 중심으로 연결
  - 링형(Ring, 루프형): 서로 이웃하는 것끼리 포인트 투 포인트 방식 연결
  - 버스형(Bus): 1개의 통신 회선에 여러 대의 단말 장치가 연결
  - 계층형(Tree, 분산형): 분산 처리 시스템을 구성하는 방식
  - 망형(Mesh, 그물형): 노드의 수가 n개일 때 n(n-1)/2 개의 회선 필요

 
네트워크 관련 장비
  - 리피터(증폭기): 신호가 약해질 때 원래 신호 형태로 재생하여 다시 전송
  - 브리지: 1:1 연결
  - 라우터: LAN과 LAN 연결에 전송의 최적 경로를 선택할 수 있는 기능 추가

 
패킷 교환망
  - 메시지를 일정한 길이의 패킷으로 잘라서 저장 및 전송하는 방식

 
LAN(근거리 통신망)
  - 광대역 통신망과는 달리 학교, 회사, 연구소 등 한 건물이나 일정 지역 내에서 컴퓨터나 단말 장치들을 고속 전용 회선 연결
  - LAN -> MAN -> WAN

